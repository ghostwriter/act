name: Automation

on:
  pull_request:
  push:
    branches:
      - "main"
      - "[0-9]+.[0-9]+.x"
      - "v[0-9]+"
  schedule:
    - cron: "0 * * * *" # Runs hourly
  workflow_dispatch:
  workflow_call:
    secrets:
      STRYKER_DASHBOARD_API_KEY:
        required: false
      CODECOV_TOKEN:
        required: false

jobs:
  matrix:
    name: Generate job matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Determine CI Jobs
        id: matrix
        uses: docker://ghcr.io/ghostwriter/compliance:v1
        with:
          command: matrix
  qa:
    name: ${{ matrix.name }} on PHP ${{ matrix.php }} with ${{ matrix.dependency }} dependencies
    needs: [matrix]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    
    # Docs: https://docs.github.com/en/actions/using-containerized-services
    # services:
    #   mysql:
    #     image: mysql:latest
    #     env:
    #       MYSQL_ALLOW_EMPTY_PASSWORD: false
    #       MYSQL_ROOT_PASSWORD: 'toor'
    #       MYSQL_DATABASE: 'testdb'
    #     ports:
    #       - 3306/tcp
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          tools: psalm, phpstan, cs2pr, phpcs, phpunit


#         Local MySQL service in GitHub hosted environments is disabled by default.
#         If you are using it instead of service containers, make sure you start it.
#       - name: Start mysql service
#         run: sudo systemctl start mysql.service

#       - name: Run Migration
#         run: |
#           php bin/console migrations:migrate || echo "No migrations found or migration failed"
#         env:
#           DATABASE_URL: mysql://root:toor@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/testdb

#       - name: Run phpcs
#         run: phpcs -q --report=checkstyle src | cs2pr

#       - name: Run Psalm
#         run: psalm --output-format=github
#         if: true

#       - name: Run PHPStan
#         run: phpstan analyse src
        
#       - name: Run PHPUnit
#         run: phpunit
      
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          
      - name: Setup Problem Matchers
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install ${{ matrix.dependencies }} dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: Run ${{ matrix.name }} command
        run: ${{ matrix.command }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

      # - name: ${{ matrix.name }} on PHP ${{ matrix.php }}
      #   uses: ghostwriter/laminas-continuous-integration-action@temp
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      #   with:
      #     job: '{"php":"${{ matrix.php }}","dependencies":"${{ matrix.dependency }}","extensions":${{ toJSON(matrix.extensions) }},"ini":[],"command":"${{ matrix.command }}"}'
#      - name: QA Check ${{ matrix.name }} on PHP ${{ matrix.php }}
#        uses: ghostwriter/compliance@qa/test-workflow
#        with:
#          command: check
#          job: ${{ matrix.command }}


  codecov:
    name: Upload coverage to Codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up php 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer self-update && composer install && composer dump-autoload

      - name: Run tests and collect coverage
        run: composer phpunit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ github.workspace }}/.cache/phpunit/
          verbose: true
